{"version":3,"file":"falcon.es.js","sources":["../src/reactivity.js","../src/core.js","../src/resource.js","../src/router.js","../src/store.js"],"sourcesContent":["const effectStack = [];\n\n// Helper to get the currently running effect from the top of the stack.\nconst getCurrentObserver = () => effectStack[effectStack.length - 1] || null;\n\nexport function createSignal(initialValue, options) {\n  let value = initialValue;\n  const observers = new Set();\n  const equals = options?.equals === false ? () => false : Object.is;\n  const signalId = `Signal[${initialValue}]`;\n\n  const getValue = () => {\n    const currentObserver = getCurrentObserver();\n    if (currentObserver) {\n      const observerName =\n        currentObserver.name ||\n        'effect' + Math.random().toString(36).substring(7);\n      console.log(\n        `%c${signalId}: Adding observer: ${observerName}`,\n        'color: teal;',\n      );\n      observers.add(currentObserver);\n      // Let the observer know about this signal, so it can clean up the subscription later.\n      currentObserver.dependencies.add(observers);\n    }\n    return value;\n  };\n\n  const setValue = newValue => {\n    if (!equals(value, newValue)) {\n      const oldValue = value;\n      value = newValue;\n      console.log(\n        `%c${signalId}: Value set from ${oldValue} to ${value}. Notifying ${observers.size} observers.`,\n        'color: red; font-weight: bold;',\n      );\n\n      // Notify a static copy of the observers to avoid issues with modification during iteration.\n      const observersToNotify = new Set(observers);\n      observersToNotify.forEach(observer => {\n        const observerName =\n          observer.name || 'effect' + Math.random().toString(36).substring(7);\n        console.log(\n          `%c${signalId}: Notifying observer: ${observerName}`,\n          'color: red;',\n        );\n        if (typeof observer === 'function') {\n          observer();\n        } else {\n          console.warn(\n            `${signalId}: Attempted to notify non-function observer:`,\n            observer,\n          );\n          observers.delete(observer);\n        }\n      });\n    } else {\n      console.log(\n        `%c${signalId}: Skipping update from ${value} to ${newValue} due to equals check.`,\n        'color: gray;',\n      );\n    }\n  };\n\n  return [getValue, setValue];\n}\n\nexport function createMemo(fn) {\n  console.log('createMemo: Initializing memo for function:', fn.toString());\n  let memoizedValue;\n  let isInitialized = false;\n  const [trackMemo, triggerMemo] = createSignal(undefined, { equals: false });\n\n  createEffect(() => {\n    console.log('%ccreateMemo: Internal effect (B) START', 'color: blue;');\n    const newValue = fn();\n    console.log('%c  Calculated newValue:', 'color: blue;', newValue);\n    if (!isInitialized || !Object.is(memoizedValue, newValue)) {\n      console.log(\n        '%c  Value changed! Old:',\n        'color: blue;',\n        memoizedValue,\n        'New:',\n        newValue,\n      );\n      memoizedValue = newValue;\n      isInitialized = true;\n      console.log('%c  Calling triggerMemo()', 'color: blue;');\n      triggerMemo();\n    } else {\n      console.log('%c  Value NOT changed.', 'color: blue;');\n    }\n    console.log('%ccreateMemo: Internal effect (B) END', 'color: blue;');\n  });\n\n  return () => {\n    console.log('%ccreateMemo: Getter (C) called.', 'color: green;');\n    const currentObserver = getCurrentObserver();\n    const observerName = currentObserver\n      ? currentObserver.name ||\n        'effect' + Math.random().toString(36).substring(7)\n      : 'none';\n    console.log('%c  Current observer:', 'color: green;', observerName);\n    trackMemo();\n    if (!isInitialized) {\n      // Synchronous compute for the first run if needed, though the effect handles it.\n    }\n    console.log('%c  Returning memoizedValue:', 'color: green;', memoizedValue);\n    return memoizedValue;\n  };\n}\n\n/**\n * Runs all cleanup logic for a given effect.\n * @param {Function} effect The effect function to clean up.\n */\nfunction runCleanup(effect) {\n  // Run all cleanup functions registered via onCleanup\n  for (const cleanupFn of effect.cleanups) {\n    try {\n      cleanupFn();\n    } catch (err) {\n      console.error('Error during onCleanup function:', err);\n    }\n  }\n  // Clear the cleanup array.\n  effect.cleanups.length = 0;\n\n  // Remove this effect from all signals it subscribed to.\n  for (const dependency of effect.dependencies) {\n    dependency.delete(effect);\n  }\n  effect.dependencies.clear();\n}\n\nexport function createEffect(callback) {\n  const execute = () => {\n    // 1. Run cleanup for any previous execution of this effect.\n    runCleanup(execute);\n\n    // 2. Set this effect as the current observer.\n    effectStack.push(execute);\n\n    try {\n      // 3. Run the user's callback.\n      console.log('Effect Execute: Running user callback');\n      callback();\n    } catch (err) {\n      console.error('Error during effect execution:', err);\n    } finally {\n      // 4. Restore the previous observer.\n      effectStack.pop();\n      console.log('Effect Execute: Finished, removed from stack.');\n    }\n  };\n\n  // Attach properties directly to the effect function\n  execute.dependencies = new Set();\n  execute.cleanups = [];\n\n  // --- THE FIX ---\n  // Schedule the FIRST execution asynchronously. This gives the DOM time to update\n  // before the effect runs, which is crucial for components like <Show>.\n  // Subsequent runs triggered by signals are synchronous.\n  console.log('createEffect: Scheduling initial execution with queueMicrotask');\n  queueMicrotask(execute);\n}\n/**\n * Registers a cleanup function to run when the current reactive scope is destroyed.\n * @param {Function} fn The cleanup function.\n */\nexport function onCleanup(fn) {\n  const currentObserver = getCurrentObserver();\n  if (currentObserver) {\n    // Add the function to the current effect's cleanup list.\n    currentObserver.cleanups.push(fn);\n  } else {\n    console.warn(\n      'onCleanup was called outside of a reactive effect scope and will be ignored.',\n    );\n  }\n}\n","import { createEffect, createMemo } from './reactivity.js';\n\nfunction appendChild(parent, child) {\n  if (Array.isArray(child)) {\n    child.forEach(nestedChild => appendChild(parent, nestedChild));\n  } else if (child instanceof Node) {\n    parent.appendChild(child);\n  } else if (typeof child === 'string' || typeof child === 'number') {\n    parent.appendChild(document.createTextNode(child));\n  } else if (typeof child === 'function') {\n    // --- THIS IS THE FIX ---\n    // If a function is passed (like a signal getter), create a reactive text node.\n    const textNode = document.createTextNode('');\n    createEffect(() => {\n      textNode.textContent = child();\n    });\n    parent.appendChild(textNode);\n  } else if (child == null || typeof child === 'boolean') {\n    // Intentionally do nothing for null, undefined, or booleans.\n  } else {\n    console.warn('An unknown child type was passed to appendChild:', child);\n  }\n}\n\n/**\n * Creates an HTML element for the Falcon framework with reactive capabilities.\n * @param {string} tag - The HTML tag name (e.g., 'div', 'h1', 'p').\n * @param {object | null} props - An object containing attributes/properties. Values can be static or functions (for reactivity).\n * @param {...(Node | string | Function | Comment)} children - Children can be nodes, strings, functions, or the result of helpers like Show().\n * @returns {HTMLElement} The created HTML element.\n */\nexport function createFalconElement(tag, props, ...children) {\n  if (typeof tag === 'function') {\n    return tag({ ...props, children });\n  }\n\n  const element = document.createElement(tag);\n\n  if (props) {\n    for (const [key, value] of Object.entries(props)) {\n      if (key.startsWith('on') && typeof value === 'function') {\n        element.addEventListener(key.substring(2).toLowerCase(), value);\n      } else if (typeof value === 'function' && !key.startsWith('on')) {\n        createEffect(() => {\n          const result = value();\n          if (\n            typeof result === 'boolean' &&\n            ['checked', 'disabled', 'selected'].includes(key)\n          ) {\n            if (result) {\n              element.setAttribute(key, '');\n            } else {\n              element.removeAttribute(key);\n            }\n          } else {\n            element.setAttribute(key, result);\n          }\n        });\n      } else if (key !== 'children') {\n        element.setAttribute(key, value);\n      }\n    }\n  }\n\n  appendChild(element, children);\n  return element;\n}\n\nexport function render(component, container) {\n  container.innerHTML = '';\n  const mainElement = component();\n  appendChild(container, mainElement);\n}\n\nfunction normalizeNode(content) {\n  if (content instanceof Node) return content;\n  if (content == null || typeof content === 'boolean') {\n    return document.createComment('falcon-empty-content');\n  }\n  return document.createTextNode(String(content));\n}\n\nexport function For(props) {\n  const mapFn = props.children?.[0];\n  if (typeof mapFn !== 'function') {\n    console.error('<For> component requires a function as its only child.');\n    return normalizeNode(null);\n  }\n\n  const startMarker = document.createComment('falcon-for-start');\n  const endMarker = document.createComment('falcon-for-end');\n  let prevNodesMap = new Map();\n\n  createEffect(() => {\n    const newItems = props.each();\n    const parent = startMarker.parentNode;\n    if (!Array.isArray(newItems) || !parent) return;\n\n    const newNodesMap = new Map();\n    const newNodesArray = [];\n\n    for (let i = 0; i < newItems.length; i++) {\n      const item = newItems[i];\n      const key = item.id;\n      const existingNode = prevNodesMap.get(key);\n\n      if (existingNode) {\n        newNodesArray.push(existingNode);\n        newNodesMap.set(key, existingNode);\n        prevNodesMap.delete(key);\n      } else {\n        const newNode = normalizeNode(mapFn(item, i));\n        newNode._falcon_item_key_ = key;\n        newNodesArray.push(newNode);\n        newNodesMap.set(key, newNode);\n      }\n    }\n\n    let currentElement = startMarker.nextSibling;\n    for (const newNode of newNodesArray) {\n      if (currentElement === newNode) {\n        currentElement = currentElement.nextSibling;\n      } else {\n        parent.insertBefore(newNode, currentElement);\n      }\n    }\n\n    while (currentElement !== endMarker) {\n      const next = currentElement.nextSibling;\n      const key = currentElement._falcon_item_key_;\n      if (prevNodesMap.has(key)) {\n        parent.removeChild(currentElement);\n      }\n      currentElement = next;\n    }\n\n    prevNodesMap = newNodesMap;\n  });\n\n  const fragment = document.createDocumentFragment();\n  fragment.appendChild(startMarker);\n  fragment.appendChild(endMarker);\n  return fragment;\n}\n\nexport function Show(props) {\n  const { when, fallback, children } = props;\n  const marker = document.createComment('falcon-show');\n  let currentContentNodes = [];\n  const condition = createMemo(() => !!when());\n\n  createEffect(() => {\n    const showContent = condition();\n    const parent = marker.parentNode;\n    if (!parent) return;\n\n    if (currentContentNodes.length > 0) {\n      currentContentNodes.forEach(node => {\n        if (node.parentNode === parent) parent.removeChild(node);\n      });\n    }\n    currentContentNodes = [];\n\n    const contentToRender = showContent ? children : fallback;\n    const fragment = document.createDocumentFragment();\n\n    function renderContentPart(part) {\n      if (Array.isArray(part)) {\n        part.forEach(renderContentPart);\n      } else if (typeof part === 'function') {\n        renderContentPart(part());\n      } else if (part instanceof Node) {\n        fragment.appendChild(part);\n      } else if (part != null && typeof part !== 'boolean') {\n        fragment.appendChild(document.createTextNode(String(part)));\n      }\n    }\n    renderContentPart(contentToRender);\n\n    const insertedNodes = Array.from(fragment.childNodes);\n    parent.insertBefore(fragment, marker.nextSibling);\n    currentContentNodes = insertedNodes;\n  });\n\n  return marker;\n}\n","import { createSignal, createEffect } from './reactivity.js';\n\n/**\n * A reactive primitive designed for handling asynchronous data fetching.\n * It wraps an async function and provides reactive signals for the data,\n * loading state, and any potential errors.\n *\n * @param {Function} fetcher An async function that returns a promise.\n * @returns {Function} A main getter function for the data. This function also\n * has `.loading` and `.error` properties, which are reactive getters for those states.\n */\nexport function createResource(fetcher) {\n  const [data, setData] = createSignal(undefined);\n  const [loading, setLoading] = createSignal(false);\n  const [error, setError] = createSignal(null);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await fetcher();\n      setData(result);\n    } catch (err) {\n      console.error('[createResource] Fetching failed:', err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Wrap the fetch call in an effect. This makes the resource \"re-fetch\"\n  // automatically if the fetcher function depends on other signals.\n  createEffect(fetchData);\n\n  // The main getter for the data.\n  const resourceGetter = () => data();\n\n  // Attach the loading and error state getters to the main getter.\n  resourceGetter.loading = () => loading();\n  resourceGetter.error = () => error();\n\n  return resourceGetter;\n}\n","import { createSignal, createMemo } from './reactivity.js';\nimport { createFalconElement, Show } from './core.js';\n\n// --- 1. Reactive Location ---\n// A global signal that holds the current URL path. All routes will react to this.\nconst [location, setLocation] = createSignal(window.location.pathname);\n\n// Listen to the browser's back/forward buttons and update our signal.\nwindow.addEventListener('popstate', () => {\n  setLocation(window.location.pathname);\n});\n\n// --- 2. Navigation Function ---\n/**\n * Programmatically navigates to a new URL without a page reload.\n * @param {string} to The path to navigate to (e.g., '/about').\n */\nexport function navigate(to) {\n  window.history.pushState({}, '', to);\n  setLocation(to);\n}\n\n// --- 3. Route Component ---\n/**\n * A component that renders its children only when the current URL\n * matches its `path` prop.\n */\nexport function Route(props) {\n  const { path, children } = props;\n\n  // A memoized boolean that is `true` only when the path matches.\n  const isMatch = createMemo(() => location() === path);\n\n  // We can reuse our powerful <Show> component to handle the rendering logic!\n  return Show({\n    when: isMatch,\n    children: children,\n  });\n}\n\n// --- 4. Link Component ---\n/**\n * A component that creates a navigation link.\n * It prevents the default browser reload and uses our `navigate` function.\n */\nexport function Link(props) {\n  const { to, children } = props;\n\n  const handleClick = event => {\n    event.preventDefault(); // This is key to preventing a full page refresh.\n    navigate(to);\n  };\n\n  // Renders a standard `<a>` tag with our custom click handler.\n  return createFalconElement('a', { href: to, onclick: handleClick }, children);\n}\n","import { createSignal } from './reactivity.js';\n\n/**\n * Creates a reactive store object.\n * The store's state is deeply reactive, meaning changes to nested properties\n * will trigger updates in components that depend on them.\n *\n * @param {object} initialState The initial state of the store.\n * @returns {[object, function]} A tuple containing the reactive state object and a setter function.\n */\nexport function createStore(initialState) {\n  // The raw state object where we'll keep the signals.\n  const rawState = {};\n\n  // The handler for the Proxy. This intercepts property access.\n  const handler = {\n    get(target, prop) {\n      // When a property is accessed (e.g., store.count), return its signal's getter.\n      // This allows components to subscribe to changes.\n      if (prop in target) {\n        return target[prop][0](); // [0] is the getter\n      }\n      console.warn(`[Store] Property \"${prop}\" does not exist on the store.`);\n      return undefined;\n    },\n    set() {\n      // Prevent direct mutation of the store.\n      console.warn(\n        `[Store] Direct mutation is not allowed. Use the setter function instead.`,\n      );\n      return false; // Return false to indicate the set operation failed.\n    },\n  };\n\n  // Create signals for each property in the initial state.\n  for (const key in initialState) {\n    rawState[key] = createSignal(initialState[key]);\n  }\n\n  // The public-facing state object is a Proxy that makes it read-only and reactive.\n  const state = new Proxy(rawState, handler);\n\n  /**\n   * The setter function to update the store's state.\n   * It can accept an object to merge, or a function that receives the previous state.\n   * @param {object|function} newStateOrFn\n   */\n  const setState = newStateOrFn => {\n    const oldState = {};\n    for (const key in rawState) {\n      oldState[key] = rawState[key][0](); // Get current values\n    }\n\n    const newState =\n      typeof newStateOrFn === 'function'\n        ? newStateOrFn(oldState)\n        : newStateOrFn;\n\n    for (const key in newState) {\n      if (key in rawState) {\n        // Update the signal for the corresponding key.\n        rawState[key][1](newState[key]); // [1] is the setter\n      } else {\n        console.warn(\n          `[Store] Cannot set property \"${key}\" that was not in the initial state.`,\n        );\n      }\n    }\n  };\n\n  return [state, setState];\n}\n"],"names":["effectStack","getCurrentObserver","createSignal","initialValue","options","value","observers","equals","signalId","currentObserver","observerName","newValue","oldValue","observer","createMemo","fn","memoizedValue","isInitialized","trackMemo","triggerMemo","createEffect","runCleanup","effect","cleanupFn","err","dependency","callback","execute","onCleanup","appendChild","parent","child","nestedChild","textNode","createFalconElement","tag","props","children","element","key","result","render","component","container","mainElement","normalizeNode","content","For","_a","mapFn","startMarker","endMarker","prevNodesMap","newItems","newNodesMap","newNodesArray","i","item","existingNode","newNode","currentElement","next","fragment","Show","when","fallback","marker","currentContentNodes","condition","showContent","node","contentToRender","renderContentPart","part","insertedNodes","createResource","fetcher","data","setData","loading","setLoading","error","setError","resourceGetter","location","setLocation","navigate","to","Route","path","isMatch","Link","event","createStore","initialState","rawState","handler","target","prop","newStateOrFn","oldState","newState"],"mappings":"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"}