{"version":3,"file":"falcon.umd.js","sources":["../src/reactivity.js","../src/core.js","../src/resource.js","../src/router.js","../src/store.js"],"sourcesContent":["const effectStack = [];\n\n// Helper to get the currently running effect from the top of the stack.\nconst getCurrentObserver = () => effectStack[effectStack.length - 1] || null;\n\nexport function createSignal(initialValue, options) {\n  let value = initialValue;\n  const observers = new Set();\n  const equals = options?.equals === false ? () => false : Object.is;\n  const signalId = `Signal[${initialValue}]`;\n\n  const getValue = () => {\n    const currentObserver = getCurrentObserver();\n    if (currentObserver) {\n      const observerName =\n        currentObserver.name ||\n        'effect' + Math.random().toString(36).substring(7);\n      console.log(\n        `%c${signalId}: Adding observer: ${observerName}`,\n        'color: teal;',\n      );\n      observers.add(currentObserver);\n      // Let the observer know about this signal, so it can clean up the subscription later.\n      currentObserver.dependencies.add(observers);\n    }\n    return value;\n  };\n\n  const setValue = newValue => {\n    if (!equals(value, newValue)) {\n      const oldValue = value;\n      value = newValue;\n      console.log(\n        `%c${signalId}: Value set from ${oldValue} to ${value}. Notifying ${observers.size} observers.`,\n        'color: red; font-weight: bold;',\n      );\n\n      // Notify a static copy of the observers to avoid issues with modification during iteration.\n      const observersToNotify = new Set(observers);\n      observersToNotify.forEach(observer => {\n        const observerName =\n          observer.name || 'effect' + Math.random().toString(36).substring(7);\n        console.log(\n          `%c${signalId}: Notifying observer: ${observerName}`,\n          'color: red;',\n        );\n        if (typeof observer === 'function') {\n          observer();\n        } else {\n          console.warn(\n            `${signalId}: Attempted to notify non-function observer:`,\n            observer,\n          );\n          observers.delete(observer);\n        }\n      });\n    } else {\n      console.log(\n        `%c${signalId}: Skipping update from ${value} to ${newValue} due to equals check.`,\n        'color: gray;',\n      );\n    }\n  };\n\n  return [getValue, setValue];\n}\n\nexport function createMemo(fn) {\n  console.log('createMemo: Initializing memo for function:', fn.toString());\n  let memoizedValue;\n  let isInitialized = false;\n  const [trackMemo, triggerMemo] = createSignal(undefined, { equals: false });\n\n  createEffect(() => {\n    console.log('%ccreateMemo: Internal effect (B) START', 'color: blue;');\n    const newValue = fn();\n    console.log('%c  Calculated newValue:', 'color: blue;', newValue);\n    if (!isInitialized || !Object.is(memoizedValue, newValue)) {\n      console.log(\n        '%c  Value changed! Old:',\n        'color: blue;',\n        memoizedValue,\n        'New:',\n        newValue,\n      );\n      memoizedValue = newValue;\n      isInitialized = true;\n      console.log('%c  Calling triggerMemo()', 'color: blue;');\n      triggerMemo();\n    } else {\n      console.log('%c  Value NOT changed.', 'color: blue;');\n    }\n    console.log('%ccreateMemo: Internal effect (B) END', 'color: blue;');\n  });\n\n  return () => {\n    console.log('%ccreateMemo: Getter (C) called.', 'color: green;');\n    const currentObserver = getCurrentObserver();\n    const observerName = currentObserver\n      ? currentObserver.name ||\n        'effect' + Math.random().toString(36).substring(7)\n      : 'none';\n    console.log('%c  Current observer:', 'color: green;', observerName);\n    trackMemo();\n    if (!isInitialized) {\n      // Synchronous compute for the first run if needed, though the effect handles it.\n    }\n    console.log('%c  Returning memoizedValue:', 'color: green;', memoizedValue);\n    return memoizedValue;\n  };\n}\n\n/**\n * Runs all cleanup logic for a given effect.\n * @param {Function} effect The effect function to clean up.\n */\nfunction runCleanup(effect) {\n  // Run all cleanup functions registered via onCleanup\n  for (const cleanupFn of effect.cleanups) {\n    try {\n      cleanupFn();\n    } catch (err) {\n      console.error('Error during onCleanup function:', err);\n    }\n  }\n  // Clear the cleanup array.\n  effect.cleanups.length = 0;\n\n  // Remove this effect from all signals it subscribed to.\n  for (const dependency of effect.dependencies) {\n    dependency.delete(effect);\n  }\n  effect.dependencies.clear();\n}\n\nexport function createEffect(callback) {\n  const execute = () => {\n    // 1. Run cleanup for any previous execution of this effect.\n    runCleanup(execute);\n\n    // 2. Set this effect as the current observer.\n    effectStack.push(execute);\n\n    try {\n      // 3. Run the user's callback.\n      console.log('Effect Execute: Running user callback');\n      callback();\n    } catch (err) {\n      console.error('Error during effect execution:', err);\n    } finally {\n      // 4. Restore the previous observer.\n      effectStack.pop();\n      console.log('Effect Execute: Finished, removed from stack.');\n    }\n  };\n\n  // Attach properties directly to the effect function\n  execute.dependencies = new Set();\n  execute.cleanups = [];\n\n  // --- THE FIX ---\n  // Schedule the FIRST execution asynchronously. This gives the DOM time to update\n  // before the effect runs, which is crucial for components like <Show>.\n  // Subsequent runs triggered by signals are synchronous.\n  console.log('createEffect: Scheduling initial execution with queueMicrotask');\n  queueMicrotask(execute);\n}\n/**\n * Registers a cleanup function to run when the current reactive scope is destroyed.\n * @param {Function} fn The cleanup function.\n */\nexport function onCleanup(fn) {\n  const currentObserver = getCurrentObserver();\n  if (currentObserver) {\n    // Add the function to the current effect's cleanup list.\n    currentObserver.cleanups.push(fn);\n  } else {\n    console.warn(\n      'onCleanup was called outside of a reactive effect scope and will be ignored.',\n    );\n  }\n}\n","import { createEffect, createMemo } from './reactivity.js';\n\nfunction appendChild(parent, child) {\n  if (Array.isArray(child)) {\n    child.forEach(nestedChild => appendChild(parent, nestedChild));\n  } else if (child instanceof Node) {\n    parent.appendChild(child);\n  } else if (typeof child === 'string' || typeof child === 'number') {\n    parent.appendChild(document.createTextNode(child));\n  } else if (typeof child === 'function') {\n    // --- THIS IS THE FIX ---\n    // If a function is passed (like a signal getter), create a reactive text node.\n    const textNode = document.createTextNode('');\n    createEffect(() => {\n      textNode.textContent = child();\n    });\n    parent.appendChild(textNode);\n  } else if (child == null || typeof child === 'boolean') {\n    // Intentionally do nothing for null, undefined, or booleans.\n  } else {\n    console.warn('An unknown child type was passed to appendChild:', child);\n  }\n}\n\n/**\n * Creates an HTML element for the Falcon framework with reactive capabilities.\n * @param {string} tag - The HTML tag name (e.g., 'div', 'h1', 'p').\n * @param {object | null} props - An object containing attributes/properties. Values can be static or functions (for reactivity).\n * @param {...(Node | string | Function | Comment)} children - Children can be nodes, strings, functions, or the result of helpers like Show().\n * @returns {HTMLElement} The created HTML element.\n */\nexport function createFalconElement(tag, props, ...children) {\n  if (typeof tag === 'function') {\n    return tag({ ...props, children });\n  }\n\n  const element = document.createElement(tag);\n\n  if (props) {\n    for (const [key, value] of Object.entries(props)) {\n      if (key.startsWith('on') && typeof value === 'function') {\n        element.addEventListener(key.substring(2).toLowerCase(), value);\n      } else if (typeof value === 'function' && !key.startsWith('on')) {\n        createEffect(() => {\n          const result = value();\n          if (\n            typeof result === 'boolean' &&\n            ['checked', 'disabled', 'selected'].includes(key)\n          ) {\n            if (result) {\n              element.setAttribute(key, '');\n            } else {\n              element.removeAttribute(key);\n            }\n          } else {\n            element.setAttribute(key, result);\n          }\n        });\n      } else if (key !== 'children') {\n        element.setAttribute(key, value);\n      }\n    }\n  }\n\n  appendChild(element, children);\n  return element;\n}\n\nexport function render(component, container) {\n  container.innerHTML = '';\n  const mainElement = component();\n  appendChild(container, mainElement);\n}\n\nfunction normalizeNode(content) {\n  if (content instanceof Node) return content;\n  if (content == null || typeof content === 'boolean') {\n    return document.createComment('falcon-empty-content');\n  }\n  return document.createTextNode(String(content));\n}\n\nexport function For(props) {\n  const mapFn = props.children?.[0];\n  if (typeof mapFn !== 'function') {\n    console.error('<For> component requires a function as its only child.');\n    return normalizeNode(null);\n  }\n\n  const startMarker = document.createComment('falcon-for-start');\n  const endMarker = document.createComment('falcon-for-end');\n  let prevNodesMap = new Map();\n\n  createEffect(() => {\n    const newItems = props.each();\n    const parent = startMarker.parentNode;\n    if (!Array.isArray(newItems) || !parent) return;\n\n    const newNodesMap = new Map();\n    const newNodesArray = [];\n\n    for (let i = 0; i < newItems.length; i++) {\n      const item = newItems[i];\n      const key = item.id;\n      const existingNode = prevNodesMap.get(key);\n\n      if (existingNode) {\n        newNodesArray.push(existingNode);\n        newNodesMap.set(key, existingNode);\n        prevNodesMap.delete(key);\n      } else {\n        const newNode = normalizeNode(mapFn(item, i));\n        newNode._falcon_item_key_ = key;\n        newNodesArray.push(newNode);\n        newNodesMap.set(key, newNode);\n      }\n    }\n\n    let currentElement = startMarker.nextSibling;\n    for (const newNode of newNodesArray) {\n      if (currentElement === newNode) {\n        currentElement = currentElement.nextSibling;\n      } else {\n        parent.insertBefore(newNode, currentElement);\n      }\n    }\n\n    while (currentElement !== endMarker) {\n      const next = currentElement.nextSibling;\n      const key = currentElement._falcon_item_key_;\n      if (prevNodesMap.has(key)) {\n        parent.removeChild(currentElement);\n      }\n      currentElement = next;\n    }\n\n    prevNodesMap = newNodesMap;\n  });\n\n  const fragment = document.createDocumentFragment();\n  fragment.appendChild(startMarker);\n  fragment.appendChild(endMarker);\n  return fragment;\n}\n\nexport function Show(props) {\n  const { when, fallback, children } = props;\n  const marker = document.createComment('falcon-show');\n  let currentContentNodes = [];\n  const condition = createMemo(() => !!when());\n\n  createEffect(() => {\n    const showContent = condition();\n    const parent = marker.parentNode;\n    if (!parent) return;\n\n    if (currentContentNodes.length > 0) {\n      currentContentNodes.forEach(node => {\n        if (node.parentNode === parent) parent.removeChild(node);\n      });\n    }\n    currentContentNodes = [];\n\n    const contentToRender = showContent ? children : fallback;\n    const fragment = document.createDocumentFragment();\n\n    function renderContentPart(part) {\n      if (Array.isArray(part)) {\n        part.forEach(renderContentPart);\n      } else if (typeof part === 'function') {\n        renderContentPart(part());\n      } else if (part instanceof Node) {\n        fragment.appendChild(part);\n      } else if (part != null && typeof part !== 'boolean') {\n        fragment.appendChild(document.createTextNode(String(part)));\n      }\n    }\n    renderContentPart(contentToRender);\n\n    const insertedNodes = Array.from(fragment.childNodes);\n    parent.insertBefore(fragment, marker.nextSibling);\n    currentContentNodes = insertedNodes;\n  });\n\n  return marker;\n}\n","import { createSignal, createEffect } from './reactivity.js';\n\n/**\n * A reactive primitive designed for handling asynchronous data fetching.\n * It wraps an async function and provides reactive signals for the data,\n * loading state, and any potential errors.\n *\n * @param {Function} fetcher An async function that returns a promise.\n * @returns {Function} A main getter function for the data. This function also\n * has `.loading` and `.error` properties, which are reactive getters for those states.\n */\nexport function createResource(fetcher) {\n  const [data, setData] = createSignal(undefined);\n  const [loading, setLoading] = createSignal(false);\n  const [error, setError] = createSignal(null);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await fetcher();\n      setData(result);\n    } catch (err) {\n      console.error('[createResource] Fetching failed:', err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Wrap the fetch call in an effect. This makes the resource \"re-fetch\"\n  // automatically if the fetcher function depends on other signals.\n  createEffect(fetchData);\n\n  // The main getter for the data.\n  const resourceGetter = () => data();\n\n  // Attach the loading and error state getters to the main getter.\n  resourceGetter.loading = () => loading();\n  resourceGetter.error = () => error();\n\n  return resourceGetter;\n}\n","import { createSignal, createMemo } from './reactivity.js';\nimport { createFalconElement, Show } from './core.js';\n\n// --- 1. Reactive Location ---\n// A global signal that holds the current URL path. All routes will react to this.\nconst [location, setLocation] = createSignal(window.location.pathname);\n\n// Listen to the browser's back/forward buttons and update our signal.\nwindow.addEventListener('popstate', () => {\n  setLocation(window.location.pathname);\n});\n\n// --- 2. Navigation Function ---\n/**\n * Programmatically navigates to a new URL without a page reload.\n * @param {string} to The path to navigate to (e.g., '/about').\n */\nexport function navigate(to) {\n  window.history.pushState({}, '', to);\n  setLocation(to);\n}\n\n// --- 3. Route Component ---\n/**\n * A component that renders its children only when the current URL\n * matches its `path` prop.\n */\nexport function Route(props) {\n  const { path, children } = props;\n\n  // A memoized boolean that is `true` only when the path matches.\n  const isMatch = createMemo(() => location() === path);\n\n  // We can reuse our powerful <Show> component to handle the rendering logic!\n  return Show({\n    when: isMatch,\n    children: children,\n  });\n}\n\n// --- 4. Link Component ---\n/**\n * A component that creates a navigation link.\n * It prevents the default browser reload and uses our `navigate` function.\n */\nexport function Link(props) {\n  const { to, children } = props;\n\n  const handleClick = event => {\n    event.preventDefault(); // This is key to preventing a full page refresh.\n    navigate(to);\n  };\n\n  // Renders a standard `<a>` tag with our custom click handler.\n  return createFalconElement('a', { href: to, onclick: handleClick }, children);\n}\n","import { createSignal } from './reactivity.js';\n\n/**\n * Creates a reactive store object.\n * The store's state is deeply reactive, meaning changes to nested properties\n * will trigger updates in components that depend on them.\n *\n * @param {object} initialState The initial state of the store.\n * @returns {[object, function]} A tuple containing the reactive state object and a setter function.\n */\nexport function createStore(initialState) {\n  // The raw state object where we'll keep the signals.\n  const rawState = {};\n\n  // The handler for the Proxy. This intercepts property access.\n  const handler = {\n    get(target, prop) {\n      // When a property is accessed (e.g., store.count), return its signal's getter.\n      // This allows components to subscribe to changes.\n      if (prop in target) {\n        return target[prop][0](); // [0] is the getter\n      }\n      console.warn(`[Store] Property \"${prop}\" does not exist on the store.`);\n      return undefined;\n    },\n    set() {\n      // Prevent direct mutation of the store.\n      console.warn(\n        `[Store] Direct mutation is not allowed. Use the setter function instead.`,\n      );\n      return false; // Return false to indicate the set operation failed.\n    },\n  };\n\n  // Create signals for each property in the initial state.\n  for (const key in initialState) {\n    rawState[key] = createSignal(initialState[key]);\n  }\n\n  // The public-facing state object is a Proxy that makes it read-only and reactive.\n  const state = new Proxy(rawState, handler);\n\n  /**\n   * The setter function to update the store's state.\n   * It can accept an object to merge, or a function that receives the previous state.\n   * @param {object|function} newStateOrFn\n   */\n  const setState = newStateOrFn => {\n    const oldState = {};\n    for (const key in rawState) {\n      oldState[key] = rawState[key][0](); // Get current values\n    }\n\n    const newState =\n      typeof newStateOrFn === 'function'\n        ? newStateOrFn(oldState)\n        : newStateOrFn;\n\n    for (const key in newState) {\n      if (key in rawState) {\n        // Update the signal for the corresponding key.\n        rawState[key][1](newState[key]); // [1] is the setter\n      } else {\n        console.warn(\n          `[Store] Cannot set property \"${key}\" that was not in the initial state.`,\n        );\n      }\n    }\n  };\n\n  return [state, setState];\n}\n"],"names":["effectStack","getCurrentObserver","createSignal","initialValue","options","value","observers","equals","signalId","currentObserver","observerName","newValue","oldValue","observer","createMemo","fn","memoizedValue","isInitialized","trackMemo","triggerMemo","createEffect","runCleanup","effect","cleanupFn","err","dependency","callback","execute","onCleanup","appendChild","parent","child","nestedChild","textNode","createFalconElement","tag","props","children","element","key","result","render","component","container","mainElement","normalizeNode","content","For","mapFn","_a","startMarker","endMarker","prevNodesMap","newItems","newNodesMap","newNodesArray","i","item","existingNode","newNode","currentElement","next","fragment","Show","when","fallback","marker","currentContentNodes","condition","showContent","node","contentToRender","renderContentPart","part","insertedNodes","createResource","fetcher","data","setData","loading","setLoading","error","setError","resourceGetter","location","setLocation","navigate","to","Route","path","isMatch","Link","event","createStore","initialState","rawState","handler","target","prop","newStateOrFn","oldState","newState"],"mappings":"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"}